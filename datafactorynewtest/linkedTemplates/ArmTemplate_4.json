{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorynewtest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/getting_deleted_file_to_src_location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureblob_storage_with_param",
								"type": "DatasetReference",
								"parameters": {
									"contanier_name": "input",
									"filename": {
										"value": "@concat(pipeline().parameters.table,'.csv')",
										"type": "Expression"
									},
									"folder_name": "new"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "New folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-05T17:42:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/incr_load_with_watermarktable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkponwatermarktable",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "dbo",
									"table_name": "wartermarktable"
								}
							}
						}
					},
					{
						"name": "latestupdatedate_Lookup_on file_src",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select max(last_modifytime) as latestupdatedate from file_src",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@pipeline().parameters.schema_name",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkponwatermarktable",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "latestupdatedate_Lookup_on file_src",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from file_src where last_modifytime>'@{activity('lkponwatermarktable').output.firstRow.watermarkvalue}' and last_modifytime<='@{activity('latestupdatedate_Lookup_on file_src').output.firstRow.latestupdatedate}'\n\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "dbo.",
									"table_name": "file_src"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureblob_storage_with_param",
								"type": "DatasetReference",
								"parameters": {
									"contanier_name": "project-folder",
									"filename": {
										"value": "@concat('file.',pipeline().RunId)",
										"type": "Expression"
									},
									"folder_name": "tgt_folder"
								}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark_table]",
							"storedProcedureParameters": {
								"lastmodifytime": {
									"value": {
										"value": "@activity('latestupdatedate_Lookup_on file_src').output.firstRow.latestupdatedate",
										"type": "Expression"
									},
									"type": "String"
								},
								"tablename": {
									"value": {
										"value": "@activity('latestupdatedate_Lookup_on file_src').output.firstRow.table_name\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer_onprem",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-05T05:55:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/oracle_onprem_to_sql_onprem_for city')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "oracle_onprem_to_sql_onprem_for city",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EMPNO",
											"type": "Double"
										},
										"sink": {
											"name": "empno",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "oracle_db_onprem_with_param",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@pipeline().parameters.schema_name",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@pipeline().parameters.t_schema_name",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.t_table_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					},
					"t_schema_name": {
						"type": "string"
					},
					"t_table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "class_HW_folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-04T16:53:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_copy_multiple_f_with_getmetadata_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@pipeline().parameters.folder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "onprem_sql",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@pipeline().parameters.folder",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adls2025",
								"type": "DatasetReference",
								"parameters": {
									"file": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "new2025"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_full_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_contrl_table_forfullload",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select *from [metadata].[control_table_Batch_001] where load_type='@{pipeline().parameters.load_type}' and is_active='Y' and SOURCE_SYSTEM='@{pipeline().parameters.src_system}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "control_table_Batch_001",
									"schema_name": "metadata"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_contrl_table_forfullload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_contrl_table_forfullload').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "onprem_sqlserverToADLSstorageCopy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().SOURCE_TABLE",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ADLSstorageToAzureSql",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "onprem_sqlserverToADLSstorageCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().SOURCE_TABLE,'.csv')",
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().TARGET_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete_Afterarcivinginzipformat_delete_fromAdls",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "MoveAdlsFileToArciveLocation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "MoveAdlsFileToArciveLocation",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ADLSstorageToAzureSql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().TARGET_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "project-folder",
												"file": {
													"value": "@concat(item().TARGET_TABLE,'_',utcNow(),'.csv')\n",
													"type": "Expression"
												},
												"folder": {
													"value": "arcive",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"src_system": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"load_type": {
						"type": "string",
						"defaultValue": "full"
					}
				},
				"folder": {
					"name": "new2025"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_incr_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_on_cntrolTable_for_incr_typetable",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select *from [metadata].[control_table_Batch_001] where load_type='@{pipeline().parameters.LOAD_TYPE}' \nand is_active='Y' and SOURCE_SYSTEM='@{pipeline().parameters.SOURCE_SYSTEM}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "control_table_Batch_001",
									"schema_name": "metadata"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_to_process_Incr_table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_on_cntrolTable_for_incr_typetable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_on_cntrolTable_for_incr_typetable').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy dataFromsrconpremsqlToAdlsstorage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * \nFROM @{item().SOURCE_SCHEMA}.@{item().SOURCE_TABLE} \nWHERE @{item().WATERMARK_COLUMN} > '@{item().WATERMARK_COLUM_VALUE}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": " ",
													"type": "Expression"
												},
												"table_name": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().TARGET_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_Adls_storage_to_azureSql",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy dataFromsrconpremsqlToAdlsstorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().TARGET_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "move_to_arcival_location_fromAdls_storage",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data_Adls_storage_to_azureSql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "project-folder",
												"file": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder": {
													"value": "arcive",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "After_arcivethe_file_delete_from_adlsstorage",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "move_to_arcival_location_fromAdls_storage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().SOURCE_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Script_updating_watermarkconumnvalue_in_controltable",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "After_arcivethe_file_delete_from_adlsstorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "update [metadata].[control_table_Batch_001] set WATERMARK_COLUM_VALUE= getdate() where SOURCE_SYSTEM=@{item().SOURCE_SYSTEM} and \t\nLOAD_TYPE=@{item().LOAD_TYPE} and SOURCE_SCHEMA=@{item().SOURCE_SCHEMA} and SOURCE_TABLE=@{item().SOURCE_TABLE}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SOURCE_SYSTEM": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"LOAD_TYPE": {
						"type": "string",
						"defaultValue": "incr"
					}
				},
				"folder": {
					"name": "new2025"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_loop_inside_if')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookingfolderlistfile",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "azureblob_storage_with_param",
								"type": "DatasetReference",
								"parameters": {
									"contanier_name": "project-folder",
									"filename": "list_offolder.csv",
									"folder_name": {
										"value": " ",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "lookingfolderlistfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lookingfolderlistfile').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "getfileinsidefolder",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": " ",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().folder_name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "copyfile to db",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "getfileinsidefolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copyfile to db",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"p_file_name": {
												"value": "@activity('getfileinsidefolder').output.childItems",
												"type": "Expression"
											},
											"p_folder_name": {
												"value": "@item().folder_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "2025_senario"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_scdtype1_new')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "scdtype1_new",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scdtype1_new",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"claimfile": {
										"contanier_name": "project-folder",
										"filename": "claim_src_data.csv",
										"folder_name": "src_folder"
									},
									"lkpontgt": {
										"table_name": "claim_tgt_scd1data",
										"schema_name": "dbo"
									},
									"insertclaim": {
										"table_name": "claim_tgt_scd1data",
										"schema_name": "dbo"
									},
									"updsink": {
										"table_name": "claim_tgt_scd1data",
										"schema_name": "dbo"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_to get_max_update_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select max(update_date) as max_update_date from transaction_data;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver_db_onprem",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": " ",
										"type": "Expression"
									},
									"table_name": {
										"value": " ",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set_max_update_date",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Lookup_to get_max_update_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_max_update_date",
							"value": {
								"value": "update METADATA.CONTROL_TABLE set PROCESSED_DATE='@{activity('Lookup_to get_max_update_date').output.firstRow.max_update_date}' where control_id=4\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set_max_update_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "update METADATA.CONTROL_TABLE set PROCESSED_DATE='@{variables('v_max_update_date')}' where control_id=4",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azureblob_storage_with_param",
								"type": "DatasetReference",
								"parameters": {
									"contanier_name": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.srcfile",
										"type": "Expression"
									},
									"folder_name": {
										"value": "@pipeline().parameters.folder",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"srcfile": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dataset_azblob_2025",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.folder",
										"type": "Expression"
									},
									"file": {
										"value": "*.csv",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_azblob_2025",
											"type": "DatasetReference",
											"parameters": {
												"container": "project-folder",
												"folder": "src_folder",
												"file": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "dbo",
												"table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": " ",
													"type": "Expression"
												},
												"folder_name": "DBO"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "project-folder",
												"file": {
													"value": " ",
													"type": "Expression"
												},
												"folder": "arcive"
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": " ",
													"type": "Expression"
												},
												"folder_name": "DBO"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2025_senario"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "p_scdtype2_new",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scdtype2_new",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"contanier_name": "project-folder",
										"filename": "claim_src_data.csv",
										"folder_name": "src_folder"
									},
									"lkptgt": {
										"table_name": "claim_tgt_scd2data",
										"schema_name": "dbo"
									},
									"insTgt": {
										"table_name": "claim_tgt_scd2data",
										"schema_name": "dbo"
									},
									"updtgt": {
										"table_name": "claim_tgt_scd2data",
										"schema_name": "dbo"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "2025_senario"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/project_flow_with_cntrl_table_FULL_with_filter_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_on_cntrl_table_for_incr_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from METADATA.CONTROL_TABLE where source_system='@{pipeline().parameters.source_system}' AND LOAD_TYPE='@{pipeline().parameters.load_type}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "CONTROL_TABLE",
									"schema_name": "METADATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "onprem_sql_to azureblob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME} \n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().SOURCE_TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().TARGET_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "azureblob_to_azuresql",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "onprem_sql_to azureblob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "arcive-from_azureblob_to_arcivefolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "azureblob_to_azuresql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "arcive",
												"file": {
													"value": " ",
													"type": "Expression"
												},
												"folder": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "delete_from_azureblob_after arcive",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "arcive-from_azureblob_to_arcivefolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Lookup_to get_max_update_date_from_trans_table",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "delete_from_azureblob_after arcive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select max(@{item().WATERMARK_COLUMN}) as max_update_date from   @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": " ",
													"type": "Expression"
												},
												"table_name": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Set_max_update_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup_to get_max_update_date_from_trans_table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "max_updat_date",
										"value": {
											"value": "@STRING(activity('Lookup_to get_max_update_date_from_trans_table').output.firstRow.max_updat_date)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "update METADATA.CONTROL_TABLE set PROCESSED_DATE='@{variables('v_max_update_date')}' where control_id=@{item().CONTROL_ID}\n\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table_using_sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set_max_update_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[update_PROCESSED_DATE]",
										"storedProcedureParameters": {
											"in_CONTROL_ID": {
												"value": {
													"value": "@item().CONTROL_ID",
													"type": "Expression"
												}
											},
											"in_PROCESSED_DATE": {
												"value": {
													"value": "@variables('max_updat_date')",
													"type": "Expression"
												}
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup_on_cntrl_table_for_incr_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_on_cntrl_table_for_incr_load').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().SOURCE_TABLE_NAME,'CLAIM')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SOURCE_SYSTEM": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"LOAD_TYPE": {
						"type": "string"
					}
				},
				"variables": {
					"max_updat_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "class_HW_folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-10T22:10:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/project_flow_with_cntrl_table_for_full_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup on control_table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select* from dbo.CONTROL_TABLE where source_system='@{pipeline().parameters.SOURCE_SYSTEM}' and load_type='@{pipeline().parameters.LOAD_TYPE}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "CONTROL_TABLE",
									"schema_name": "METADATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "process sources table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lookup on control_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lookup on control_table').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy data_onprmsql_to_azblob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA\n",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().SOURCE_TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().TARGET_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "azblob_to_azsql",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "copy data_onprmsql_to_azblob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().TARGET_TABLE,'.csv')\n\n",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									]
								},
								{
									"name": "arcive_the_file_to_arcival_location",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "azblob_to_azsql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().SOURCE_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "arcive",
												"file": {
													"value": "@concat(item().TARGET_TABLE,'_',utcNow(),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "delete_file_from_blob_after_arcive",
									"type": "Delete",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "arcive_the_file_to_arcival_location",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().SOURCE_TABLE_SCHEMA"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SOURCE_SYSTEM": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"LOAD_TYPE": {
						"type": "string",
						"defaultValue": "FULL"
					}
				},
				"variables": {
					"max_update_date": {
						"type": "String"
					},
					"v_max_update_date": {
						"type": "String"
					},
					"max_updat_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "class_HW_folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-21T17:52:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/project_flow_with_cntrl_table_incr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_on_cntrl_table_for_incr_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from METADATA.CONTROL_TABLE where source_system='@{pipeline().parameters.source_system}' AND LOAD_TYPE='@{pipeline().parameters.load_type}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "CONTROL_TABLE",
									"schema_name": "METADATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Lookup_on_cntrl_table_for_incr_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_on_cntrl_table_for_incr_load').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "onprem_sql_to azureblob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME} where @{item().WATERMARK_COLUMN} > '@{item().PROCESSED_DATE}'\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().SOURCE_TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().TARGET_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "azureblob_to_azuresql",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "onprem_sql_to azureblob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "arcive-from_azureblob_to_arcivefolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "azureblob_to_azuresql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "arcive",
												"file": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "delete_from_azureblob_after arcive",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "arcive-from_azureblob_to_arcivefolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Lookup_to get_max_update_date_from_trans_table",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "delete_from_azureblob_after arcive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select max(@{item().WATERMARK_COLUMN}) as max_update_date from   @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": " ",
													"type": "Expression"
												},
												"table_name": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Set_max_update_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup_to get_max_update_date_from_trans_table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_max_update_date",
										"value": {
											"value": "@STRING(activity('Lookup_to get_max_update_date_from_trans_table').output.firstRow.max_update_date)\n\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "update METADATA.CONTROL_TABLE set PROCESSED_DATE='@{variables('v_max_update_date')}' where control_id=@{item().CONTROL_ID}\n\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table_using_sp",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set_max_update_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[update_PROCESSED_DATE]",
										"storedProcedureParameters": {
											"in_CONTROL_ID": {
												"value": {
													"value": "@item().CONTROL_ID",
													"type": "Expression"
												}
											},
											"in_PROCESSED_DATE": {
												"value": {
													"value": "@variables('v_max_update_date')",
													"type": "Expression"
												}
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_system": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"load_type": {
						"type": "string",
						"defaultValue": "INCR"
					}
				},
				"variables": {
					"max_update_date": {
						"type": "String"
					},
					"v_max_update_date": {
						"type": "String"
					},
					"max_updat_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "class_HW_folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-10T22:01:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/project_flow_with_cntrl_table_incr_with_swithc_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_on_cntrl_table_for_incr_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from METADATA.CONTROL_TABLE where source_system='@{pipeline().parameters.source_system}' AND LOAD_TYPE='@{pipeline().parameters.load_type}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSql_dataset_withparam",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "CONTROL_TABLE",
									"schema_name": "METADATA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_on_cntrl_table_for_incr_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_on_cntrl_table_for_incr_load').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "onprem_sql_to azureblob",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Lookup_to get_max_update_date_from_trans_table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CLAIM_ID"
													},
													"sink": {
														"name": "CLAIM_ID"
													}
												},
												{
													"source": {
														"name": "CLAIM_NUMBER"
													},
													"sink": {
														"name": "CLAIM_NUMBER"
													}
												},
												{
													"source": {
														"name": "CLAIM_TYPE"
													},
													"sink": {
														"name": "CLAIM_TYPE"
													}
												},
												{
													"source": {
														"name": "LOCATION"
													},
													"sink": {
														"name": "CLAIM_LOCATION"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().SOURCE_TABLE_SCHEMA",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().SOURCE_TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": {
													"value": "@concat(item().TARGET_TABLE,'.csv')",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "azureblob_to_azuresql",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Switch1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSql_dataset_withparam",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().TARGET_TABLE",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@item().TARGET_TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "arcive-from_azureblob_to_arcivefolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "azureblob_to_azuresql",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_arcive",
											"type": "DatasetReference",
											"parameters": {
												"container": "arcive",
												"file": {
													"value": " ",
													"type": "Expression"
												},
												"folder": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "delete_from_azureblob_after arcive",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "arcive-from_azureblob_to_arcivefolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azureblob_storage_with_param",
											"type": "DatasetReference",
											"parameters": {
												"contanier_name": "project-folder",
												"filename": "@concat(item().TARGET_TABLE,'.csv')",
												"folder_name": "@item().TARGET_TABLE_SCHEMA"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Lookup_to get_max_update_date_from_trans_table",
									"type": "Lookup",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "delete_from_azureblob_after arcive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select max(@{item().WATERMARK_COLUMN}) as max_update_date from   @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "sqlserver_db_onprem",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": " ",
													"type": "Expression"
												},
												"table_name": {
													"value": " ",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "update METADATA.CONTROL_TABLE set PROCESSED_DATE='@{variables('v_max_update_date')}' where control_id=@{item().CONTROL_ID}\n\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "update_proceed_date_as max_date_on_cntrl_table_using_sp",
									"type": "SqlServerStoredProcedure",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "onprem_sql_to azureblob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[update_PROCESSED_DATE]",
										"storedProcedureParameters": {
											"in_CONTROL_ID": {
												"value": {
													"value": "@item().CONTROL_ID",
													"type": "Expression"
												}
											},
											"in_PROCESSED_DATE": {
												"value": {
													"value": "@variables('v_max_update_date')",
													"type": "Expression"
												}
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().SOURCE_TABLE_NAME",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "CLAIM",
												"activities": [
													{
														"name": "onprem_sql_to azureblob_claim",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"sqlReaderQuery": {
																	"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}\n\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "CLAIM_ID"
																		},
																		"sink": {
																			"name": "CLAIM_ID"
																		}
																	},
																	{
																		"source": {
																			"name": "CLAIM_NUMBER"
																		},
																		"sink": {
																			"name": "CLAIM_NUMBER"
																		}
																	},
																	{
																		"source": {
																			"name": "CLAIM_TYPE"
																		},
																		"sink": {
																			"name": "CLAIM_TYPE"
																		}
																	},
																	{
																		"source": {
																			"name": "LOCATION"
																		},
																		"sink": {
																			"name": "CLAIM_LOCATION"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "sqlserver_db_onprem",
																"type": "DatasetReference",
																"parameters": {
																	"schema_name": {
																		"value": "@item().SOURCE_TABLE_SCHEMA",
																		"type": "Expression"
																	},
																	"table_name": {
																		"value": "@item().SOURCE_TABLE_NAME",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "azureblob_storage_with_param",
																"type": "DatasetReference",
																"parameters": {
																	"contanier_name": "project-folder",
																	"filename": {
																		"value": "@concat(item().TARGET_TABLE,'.csv')",
																		"type": "Expression"
																	},
																	"folder_name": {
																		"value": "@item().TARGET_TABLE_SCHEMA",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "INCIDENT",
												"activities": [
													{
														"name": "onprem_sql_to azureblob_claim_copy1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"sqlReaderQuery": {
																	"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}\n\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "INCIDENT_ID"
																		},
																		"sink": {
																			"name": "INCIDENT_ID"
																		}
																	},
																	{
																		"source": {
																			"name": "INCIDENT_NUMBER"
																		},
																		"sink": {
																			"name": "INCIDENT_NUMBER"
																		}
																	},
																	{
																		"source": {
																			"name": "INCIDENT_TYPE"
																		},
																		"sink": {
																			"name": "INCIDENT_TYPE"
																		}
																	},
																	{
																		"source": {
																			"name": "LOCATION"
																		},
																		"sink": {
																			"name": "INCIDENT_LOCATION"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "sqlserver_db_onprem",
																"type": "DatasetReference",
																"parameters": {
																	"schema_name": {
																		"value": "@item().SOURCE_TABLE_SCHEMA",
																		"type": "Expression"
																	},
																	"table_name": {
																		"value": "@item().SOURCE_TABLE_NAME",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "azureblob_storage_with_param",
																"type": "DatasetReference",
																"parameters": {
																	"contanier_name": "project-folder",
																	"filename": {
																		"value": "@concat(item().TARGET_TABLE,'.csv')",
																		"type": "Expression"
																	},
																	"folder_name": {
																		"value": "@item().TARGET_TABLE_SCHEMA",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "OCCERANCE",
												"activities": [
													{
														"name": "onprem_sql_to azureblob_claim_copy2",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"sqlReaderQuery": {
																	"value": "select * from @{item().SOURCE_TABLE_SCHEMA}.@{item().SOURCE_TABLE_NAME}\n\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "OCCERANCE_ID"
																		},
																		"sink": {
																			"name": "OCCERANCE_ID"
																		}
																	},
																	{
																		"source": {
																			"name": "OCCERANCE_NUMBER"
																		},
																		"sink": {
																			"name": "OCCERANCE_NUMBER"
																		}
																	},
																	{
																		"source": {
																			"name": "OCCERANCE_TYPE"
																		},
																		"sink": {
																			"name": "OCCERANCE_TYPE"
																		}
																	},
																	{
																		"source": {
																			"name": "LOCATION"
																		},
																		"sink": {
																			"name": "OCCERANCE_LOCATION"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "sqlserver_db_onprem",
																"type": "DatasetReference",
																"parameters": {
																	"schema_name": {
																		"value": "@item().SOURCE_TABLE_SCHEMA",
																		"type": "Expression"
																	},
																	"table_name": {
																		"value": "@item().SOURCE_TABLE_NAME",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "azureblob_storage_with_param",
																"type": "DatasetReference",
																"parameters": {
																	"contanier_name": "project-folder",
																	"filename": {
																		"value": "@concat(item().TARGET_TABLE,'.csv')",
																		"type": "Expression"
																	},
																	"folder_name": {
																		"value": "@item().TARGET_TABLE_SCHEMA",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_system": {
						"type": "string",
						"defaultValue": "SQL_SERVER"
					},
					"load_type": {
						"type": "string"
					}
				},
				"variables": {
					"max_update_date": {
						"type": "String"
					},
					"v_max_update_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "class_HW_folder"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-09T22:03:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scd type2withlkp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "scdtype2withlkp",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "scdtype2withlkp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsrc": {
										"schema_name": "dbo",
										"table_name": "emp2src"
									},
									"sinkforlkp": {
										"schema_name": "dbo",
										"table_name": "emp2"
									},
									"sink1": {
										"schema_name": "dbo",
										"table_name": "emp2"
									},
									"sink2": {
										"schema_name": "dbo",
										"table_name": "emp2"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-24T19:45:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scd1flowtabletotable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "scd1flowtabletotable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "scd1flowtabletotable",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsrc": {
										"schema_name": "dbo",
										"table_name": "emp1src"
									},
									"sinkforlkp": {
										"schema_name": "dbo",
										"table_name": "emp1"
									},
									"sink1": {
										"schema_name": "dbo",
										"table_name": "emp1"
									},
									"sink2": {
										"schema_name": "dbo",
										"table_name": "emp1"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-26T23:08:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/senario10_split_singl_col_into_multiple_rows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "senario10_split_singl_col_into_multiple_rows",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "senario10_split_singl_col_into_multiple_rows",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"container_name": "project-folder",
										"folder_name": "src_folder",
										"file_name": "senario10.csv"
									},
									"sink1": {
										"container_name": "project-folder",
										"folder_name": "tgt_folder",
										"file_name": "senario10.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "senario"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-30T20:46:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/senario11_mrg_multpl_row_val_into_sngl_row')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "senario11_mrg_multpl_row_val_into_sngl_row",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "senario11_mrg_multpl_row_val_into_sngl_row",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"container_name": "project-folder",
										"folder_name": "tgt_folder",
										"file_name": "senario10.csv"
									},
									"sink1": {
										"container_name": "project-folder",
										"folder_name": "src_folder",
										"file_name": "senario11tgt.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "senario"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-30T20:34:19Z"
			},
			"dependsOn": []
		}
	]
}