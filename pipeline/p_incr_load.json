{
	"name": "p_incr_load",
	"properties": {
		"activities": [
			{
				"name": "Lookup_on_cntrolTable_for_incr_typetable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select *from [metadata].[control_table_Batch_001] where load_type='@{pipeline().parameters.LOAD_TYPE}' \nand is_active='Y' and SOURCE_SYSTEM='@{pipeline().parameters.SOURCE_SYSTEM}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSql_dataset_withparam",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "control_table_Batch_001",
							"schema_name": "metadata"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_to_process_Incr_table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_on_cntrolTable_for_incr_typetable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_on_cntrolTable_for_incr_typetable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy dataFromsrconpremsqlToAdlsstorage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().SOURCE_SCHEMA}.@{item().SOURCE_TABLE} where @{item().WATERMARK_COLUMN}> @{item().WATERMARK_COLUM_VALUE}\n\n\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "sqlserver_db_onprem",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": " ",
											"type": "Expression"
										},
										"table_name": {
											"value": " ",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "azureblob_storage_with_param",
									"type": "DatasetReference",
									"parameters": {
										"contanier_name": "project-folder",
										"filename": {
											"value": "@concat(item().SOURCE_TABLE,'.csv')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item().TARGET_SCHEMA",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Copy data_Adls_storage_to_azureSql",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy dataFromsrconpremsqlToAdlsstorage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "azureblob_storage_with_param",
									"type": "DatasetReference",
									"parameters": {
										"contanier_name": "project_folder",
										"filename": {
											"value": "@concat(item().SOURCE_TABLE,'.csv')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item().SOURCE_SCHEMA",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSql_dataset_withparam",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().TARGET_TABLE",
											"type": "Expression"
										},
										"schema_name": {
											"value": "@item().TARGET_SCHEMA",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "move_to_arcival_location_fromAdls_storage",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy data_Adls_storage_to_azureSql",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "azureblob_storage_with_param",
									"type": "DatasetReference",
									"parameters": {
										"contanier_name": "project-folder",
										"filename": {
											"value": "@concat(item().SOURCE_TABLE,'.csv')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item().SOURCE_SCHEMA",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dataset_for_arcive",
									"type": "DatasetReference",
									"parameters": {
										"container": "project-folder",
										"file": {
											"value": "@concat(item().SOURCE_TABLE,'.csv')",
											"type": "Expression"
										},
										"folder": {
											"value": "@item().SOURCE_SCHEMA",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "After_arcivethe_file_delete_from_adlsstorage",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "move_to_arcival_location_fromAdls_storage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "azureblob_storage_with_param",
									"type": "DatasetReference",
									"parameters": {
										"contanier_name": "project-folder",
										"filename": {
											"value": "@concat(item().SOURCE_TABLE,'.csv')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item().SOURCE_SCHEMA",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Script_updating_watermarkconumnvalue_in_controltable",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "After_arcivethe_file_delete_from_adlsstorage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "update [metadata].[control_table_Batch_001] set WATERMARK_COLUM_VALUE= utcNow() where SOURCE_SYSTEM=@{item().SOURCE_SYSTEM} and \t\nLOAD_TYPE=@{item().LOAD_TYPE} and SOURCE_SCHEMA=@{item().SOURCE_SCHEMA} and SOURCE_TABLE=@{item().SOURCE_TABLE}",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SOURCE_SYSTEM": {
				"type": "string",
				"defaultValue": "SQL_SERVER"
			},
			"LOAD_TYPE": {
				"type": "string",
				"defaultValue": "incr"
			}
		},
		"folder": {
			"name": "new2025"
		},
		"annotations": []
	}
}